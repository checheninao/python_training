{
  "defectsList" : [ {
    "title" : "Product defects",
    "status" : "FAILED",
    "defects" : [ {
      "uid" : "8caa911368d842d9",
      "failure" : {
        "message" : "AssertionError: assert [268:test;;, ...eh,%Lg[_, ...] == [268:test;;, 2...eh,%Lg[_, ...]\n  Left contains more items, first extra item: None:namek]e'T; _;header'o!m_1>;footer?>S-}0Vrl!@\n  Use -v to get the full diff",
        "stackTrace" : "app = <fixture.application.Application object at 0x0000000004340E80>\ndb = <fixture.db.DbFixture object at 0x000000000437DA58>\njson_groups = None:namek]e'T; _;header'o!m_1>;footer?>S-}0Vrl!@\ncheck_ui = False\n\n    def test_add_group(app, db, json_groups, check_ui):\n        group = json_groups\n        with pytest.allure.step('Given a group list'):\n            old_groups = db.get_group_list()\n        with pytest.allure.step('When I add a group %s to the list' % group):\n            app.group.create(group)\n        with pytest.allure.step('Then the new group list is equal to the old list with the added group'):\n            new_groups = db.get_group_list()\n            old_groups.append(group)\n>           assert sorted(old_groups, key=Group.id_or_max) == sorted(new_groups, key=Group.id_or_max)\nE           assert [268:test;;, ...eh,%Lg[_, ...] == [268:test;;, 2...eh,%Lg[_, ...]\nE             Left contains more items, first extra item: None:namek]e'T; _;header'o!m_1>;footer?>S-}0Vrl!@\nE             Use -v to get the full diff\n\ntest\\test_add_group.py:15: AssertionError"
      },
      "testCases" : [ {
        "uid" : "eea72d9e644b1072",
        "name" : "test_add_group[None:namek]e'T; _;header'o!m_1>;footer?>S-}0Vrl!@]",
        "title" : "Test add group [None:namek]e'T; _;header'o!m_1>;footer?>S-}0Vrl!@]",
        "time" : {
          "start" : 1483891488161,
          "stop" : 1483891489179,
          "duration" : 1018
        },
        "severity" : "NORMAL",
        "status" : "FAILED"
      } ]
    }, {
      "uid" : "90441249a2c0e01",
      "failure" : {
        "message" : "AssertionError: assert [268:test;;, ...eh,%Lg[_, ...] == [268:test;;, 2...eh,%Lg[_, ...]\n  Left contains more items, first extra item: None:name ?m?&;header;footer2 qT5v )qR='gq M G\n  Use -v to get the full diff",
        "stackTrace" : "app = <fixture.application.Application object at 0x0000000004340E80>\ndb = <fixture.db.DbFixture object at 0x000000000437DA58>\njson_groups = None:name ?m?&;header;footer2 qT5v )qR='gq M G, check_ui = False\n\n    def test_add_group(app, db, json_groups, check_ui):\n        group = json_groups\n        with pytest.allure.step('Given a group list'):\n            old_groups = db.get_group_list()\n        with pytest.allure.step('When I add a group %s to the list' % group):\n            app.group.create(group)\n        with pytest.allure.step('Then the new group list is equal to the old list with the added group'):\n            new_groups = db.get_group_list()\n            old_groups.append(group)\n>           assert sorted(old_groups, key=Group.id_or_max) == sorted(new_groups, key=Group.id_or_max)\nE           assert [268:test;;, ...eh,%Lg[_, ...] == [268:test;;, 2...eh,%Lg[_, ...]\nE             Left contains more items, first extra item: None:name ?m?&;header;footer2 qT5v )qR='gq M G\nE             Use -v to get the full diff\n\ntest\\test_add_group.py:15: AssertionError"
      },
      "testCases" : [ {
        "uid" : "723d7e7fa3f18f1f",
        "name" : "test_add_group[None:name ?m?&;header;footer2 qT5v )qR='gq M G]",
        "title" : "Test add group [None:name ?m?&;header;footer2 qT5v )qR='gq M G]",
        "time" : {
          "start" : 1483891489180,
          "stop" : 1483891490122,
          "duration" : 942
        },
        "severity" : "NORMAL",
        "status" : "FAILED"
      } ]
    } ]
  }, {
    "title" : "Test defects",
    "status" : "BROKEN",
    "defects" : [ ]
  } ]
}